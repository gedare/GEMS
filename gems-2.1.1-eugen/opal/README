
Opal Quick-Start HOWTO
----------------------

This file contains the basic commands to build opal and run it with Simics.

These commands must be run on an x86-linux machine.

-----------------------------------------------------------------------------------------------

There are four arguments to opal's tester:
  1)  The name of a text configuration file:

    This file contains all the microarchitectural parameters for opal.
    The file naming convention currently is:
        std-(window size)-L1:(size):(assoc)-L2:(size):(assoc).txt

  2)  The name of a directory containing one or more trace files.
      These are generated by opal.

  3)  The name of the trace file itself.

  4)  The number of instructions to simulate.

# ------ Build and run Opal Tester ------
cd opal
make -j 4 tester
x86-linux/bin/tester.exec ./config/std-64-L1:64K:2-L2:4M:4.txt /p/multifacet/projects/nobackup1/d/traces/gzip gzip-trace 100000
cd ..

# ----- Build and run instruction decoding tester -------
cd opal
make -j 4 usd
x86-linux/bin/usd.exec < regression/inputs/usd.input >& output
/s/std/bin/tail -20 output >& output.20
diff regression/golden_results/usd.tail.20 output.20

# ------ Build Opal Module ------
cd opal
# builds to ../simics/home/<username>/lib
make -j 4 module
cd ..

# ------ Run Simics directly ------
cd simics/home/<username>
./simics -no-log -echo

# basic out-of-order simulation

    read-configuration ../../checkpoints-u3/oltp/oltp-warm-1p.check
    cpu0.print-time
    module-list-refresh
    load-module opal
    # read configuration parameters
    opal0.init ./opalconf/std-64-L1:64K:2-L2:4M:4.txt
    # start: filename is log file
    opal0.sim-start ./mcf-6-std-64-L1:64K:2-L2:4M:4.log
    # step: step 10,000 instructions
    opal0.sim-step 10000
    # print out statistics
    opal0.stats
    # close log files, free memory
    opal0.sim-stop

# tracing

    @conf.sim.instruction_profile_line_size = 4
    read-configuration ../../checkpoints-u3/oltp/oltp-warm-1p.check
    cpu0.print-time
    dstc-disable
    istc-disable
    instruction-profile-mode instruction-fetch-trace
    load-module opal
    opal0.init

    # "data" should be a sym-link to somewhere with lots of space!
    # trace start: outputfile is ./data/onem-latest
    opal0.trace-start onem-latest

    # record a trace of 10M instructions
    opal0.take-trace 10000000

    # finish recording the trace
    opal0.trace-stop
    cpu0.print-time

cd ../../..

